"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@hashbrownai+openai@0.3.0_openai@4.104.0_ws@8.18.3_zod@3.25.76_";
exports.ids = ["vendor-chunks/@hashbrownai+openai@0.3.0_openai@4.104.0_ws@8.18.3_zod@3.25.76_"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@hashbrownai+openai@0.3.0_openai@4.104.0_ws@8.18.3_zod@3.25.76_/node_modules/@hashbrownai/openai/src/index.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@hashbrownai+openai@0.3.0_openai@4.104.0_ws@8.18.3_zod@3.25.76_/node_modules/@hashbrownai/openai/src/index.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HashbrownOpenAI = void 0;\nconst text_fn_1 = __webpack_require__(/*! ./stream/text.fn */ \"(rsc)/./node_modules/.pnpm/@hashbrownai+openai@0.3.0_openai@4.104.0_ws@8.18.3_zod@3.25.76_/node_modules/@hashbrownai/openai/src/stream/text.fn.js\");\nexports.HashbrownOpenAI = {\n    stream: {\n        text: text_fn_1.text,\n    },\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGhhc2hicm93bmFpK29wZW5haUAwLjMuMF9vcGVuYWlANC4xMDQuMF93c0A4LjE4LjNfem9kQDMuMjUuNzZfL25vZGVfbW9kdWxlcy9AaGFzaGJyb3duYWkvb3BlbmFpL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIsa0JBQWtCLG1CQUFPLENBQUMsMktBQWtCO0FBQzVDLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWEtb2xpdmUtd2ViLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BoYXNoYnJvd25haStvcGVuYWlAMC4zLjBfb3BlbmFpQDQuMTA0LjBfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2Xy9ub2RlX21vZHVsZXMvQGhhc2hicm93bmFpL29wZW5haS9zcmMvaW5kZXguanM/YTJhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGFzaGJyb3duT3BlbkFJID0gdm9pZCAwO1xuY29uc3QgdGV4dF9mbl8xID0gcmVxdWlyZShcIi4vc3RyZWFtL3RleHQuZm5cIik7XG5leHBvcnRzLkhhc2hicm93bk9wZW5BSSA9IHtcbiAgICBzdHJlYW06IHtcbiAgICAgICAgdGV4dDogdGV4dF9mbl8xLnRleHQsXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@hashbrownai+openai@0.3.0_openai@4.104.0_ws@8.18.3_zod@3.25.76_/node_modules/@hashbrownai/openai/src/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@hashbrownai+openai@0.3.0_openai@4.104.0_ws@8.18.3_zod@3.25.76_/node_modules/@hashbrownai/openai/src/stream/text.fn.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@hashbrownai+openai@0.3.0_openai@4.104.0_ws@8.18.3_zod@3.25.76_/node_modules/@hashbrownai/openai/src/stream/text.fn.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.text = text;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\nconst core_1 = __webpack_require__(/*! @hashbrownai/core */ \"(rsc)/./node_modules/.pnpm/@hashbrownai+core@0.3.0/node_modules/@hashbrownai/core/index.esm.js\");\nconst openai_1 = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/.pnpm/openai@4.104.0_ws@8.18.3_zod@3.25.76/node_modules/openai/index.js\");\nfunction text(options) {\n    return tslib_1.__asyncGenerator(this, arguments, function* text_1() {\n        var _a, e_1, _b, _c;\n        const { apiKey, baseURL, request, transformRequestOptions } = options;\n        const { messages, model, tools, responseFormat, toolChoice, system } = request;\n        const openai = new openai_1.default({\n            apiKey,\n            baseURL: baseURL,\n        });\n        try {\n            const baseOptions = {\n                stream: true,\n                model: model,\n                messages: [\n                    {\n                        role: 'system',\n                        content: system,\n                    },\n                    ...messages.map((message) => {\n                        if (message.role === 'user') {\n                            return {\n                                role: message.role,\n                                content: message.content,\n                            };\n                        }\n                        if (message.role === 'assistant') {\n                            return {\n                                role: message.role,\n                                content: message.content && typeof message.content !== 'string'\n                                    ? JSON.stringify(message.content)\n                                    : message.content,\n                                tool_calls: message.toolCalls && message.toolCalls.length > 0\n                                    ? message.toolCalls.map((toolCall) => (Object.assign(Object.assign({}, toolCall), { type: 'function', function: Object.assign(Object.assign({}, toolCall.function), { arguments: JSON.stringify(toolCall.function.arguments) }) })))\n                                    : undefined,\n                            };\n                        }\n                        if (message.role === 'tool') {\n                            return {\n                                role: message.role,\n                                content: JSON.stringify(message.content),\n                                tool_call_id: message.toolCallId,\n                            };\n                        }\n                        throw new Error(`Invalid message role`);\n                    }),\n                ],\n                tools: tools && tools.length > 0\n                    ? tools.map((tool) => ({\n                        type: 'function',\n                        function: {\n                            name: tool.name,\n                            description: tool.description,\n                            parameters: tool.parameters,\n                            strict: true,\n                        },\n                    }))\n                    : undefined,\n                tool_choice: toolChoice,\n                response_format: responseFormat\n                    ? {\n                        type: 'json_schema',\n                        json_schema: {\n                            strict: true,\n                            name: 'schema',\n                            description: '',\n                            schema: responseFormat,\n                        },\n                    }\n                    : undefined,\n            };\n            const resolvedOptions = transformRequestOptions\n                ? yield tslib_1.__await(transformRequestOptions(baseOptions))\n                : baseOptions;\n            const stream = openai.beta.chat.completions.stream(resolvedOptions);\n            try {\n                for (var _d = true, stream_1 = tslib_1.__asyncValues(stream), stream_1_1; stream_1_1 = yield tslib_1.__await(stream_1.next()), _a = stream_1_1.done, !_a; _d = true) {\n                    _c = stream_1_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    const chunkMessage = {\n                        choices: chunk.choices.map((choice) => ({\n                            index: choice.index,\n                            delta: {\n                                content: choice.delta.content,\n                                role: choice.delta.role,\n                                toolCalls: choice.delta.tool_calls,\n                            },\n                            finishReason: choice.finish_reason,\n                        })),\n                    };\n                    const frame = {\n                        type: 'chunk',\n                        chunk: chunkMessage,\n                    };\n                    yield yield tslib_1.__await((0, core_1.encodeFrame)(frame));\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = stream_1.return)) yield tslib_1.__await(_b.call(stream_1));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                const frame = {\n                    type: 'error',\n                    error: error.toString(),\n                    stacktrace: error.stack,\n                };\n                yield yield tslib_1.__await((0, core_1.encodeFrame)(frame));\n            }\n            else {\n                const frame = {\n                    type: 'error',\n                    error: String(error),\n                };\n                yield yield tslib_1.__await((0, core_1.encodeFrame)(frame));\n            }\n        }\n        finally {\n            const frame = {\n                type: 'finish',\n            };\n            yield yield tslib_1.__await((0, core_1.encodeFrame)(frame));\n        }\n    });\n}\n//# sourceMappingURL=text.fn.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@hashbrownai+openai@0.3.0_openai@4.104.0_ws@8.18.3_zod@3.25.76_/node_modules/@hashbrownai/openai/src/stream/text.fn.js\n");

/***/ })

};
;